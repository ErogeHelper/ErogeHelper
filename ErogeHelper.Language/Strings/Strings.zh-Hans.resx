<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SelectProcess.Tips" xml:space="preserve">
    <value>请使用ErogeHelper.Installer.exe来安装我，安装后右键游戏程序选择Eroge Helper启动更方便哦~</value>
  </data>
  <data name="SelectProcess.InjectButton" xml:space="preserve">
    <value>注入</value>
  </data>
  <data name="SelectProcess.Label" xml:space="preserve">
    <value>选择应用</value>
  </data>
  <data name="SelectProcess.Title" xml:space="preserve">
    <value>Eroge Helper - 选择进程注入</value>
  </data>
  <data name="MessageBox.TimeoutInfo" xml:space="preserve">
    <value>(超时)未找到游戏窗口</value>
  </data>
  <data name="About.Version" xml:space="preserve">
    <value>版本： </value>
  </data>
  <data name="About.AppName" xml:space="preserve">
    <value>Eroge Helper</value>
  </data>
  <data name="About.Contributors" xml:space="preserve">
    <value>贡献者</value>
  </data>
  <data name="About.Dependencies" xml:space="preserve">
    <value>依赖项</value>
  </data>
  <data name="About.FileABug" xml:space="preserve">
    <value>如果发现任何 bug，请在 Github 仓库中创建一个新 Issue。</value>
  </data>
  <data name="About.GitHub" xml:space="preserve">
    <value>Github 仓库</value>
  </data>
  <data name="About.OpenNewIssue" xml:space="preserve">
    <value>创建新 Issue</value>
  </data>
  <data name="ShellMenu.DirectStart" xml:space="preserve">
    <value>启动游戏</value>
  </data>
  <data name="ShellMenu.LEStart" xml:space="preserve">
    <value>使用 Locate Emulator 转区启动</value>
  </data>
  <data name="ShellMenu.Administrator" xml:space="preserve">
    <value>设置管理员身份运行</value>
  </data>
  <data name="Installer.Info" xml:space="preserve">
    <value>这会将Eroge Helper注册到所有exe程序的右键上下文菜单，若要移动或删除EH文件夹请先注销掉我。</value>
  </data>
  <data name="Installer.Register" xml:space="preserve">
    <value>注册</value>
  </data>
  <data name="Installer.Unload" xml:space="preserve">
    <value>卸载</value>
  </data>
  <data name="HookConfig.Title" xml:space="preserve">
    <value>Eroge Helper - 钩子设置</value>
  </data>
  <data name="HookPage.HookCode" xml:space="preserve">
    <value>特殊码</value>
  </data>
  <data name="HookPage.Insert" xml:space="preserve">
    <value>插入</value>
  </data>
  <data name="HookPage.SelectedText" xml:space="preserve">
    <value>选择的文本</value>
  </data>
  <data name="HookPage.RegExp" xml:space="preserve">
    <value>正则表达式</value>
  </data>
  <data name="HookPage.Text" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="HookPage.Console" xml:space="preserve">
    <value>控制台输出</value>
  </data>
  <data name="HookPage.SelectText" xml:space="preserve">
    <value>文本选择</value>
  </data>
  <data name="HookPage.Submit" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="GameView.MaxLenthTip" xml:space="preserve">
    <value>跳过过长文本</value>
  </data>
  <data name="MeCabPage.JapaneseText" xml:space="preserve">
    <value>显示日文文本</value>
  </data>
  <data name="GeneralPage.AppendText" xml:space="preserve">
    <value>显示其他文本</value>
  </data>
  <data name="GeneralPage.Title" xml:space="preserve">
    <value>常规</value>
  </data>
  <data name="MeCabPage.Title" xml:space="preserve">
    <value>日文分词</value>
  </data>
  <data name="MeCabPage.PositionFormat" xml:space="preserve">
    <value>文本显示布局</value>
  </data>
  <data name="MeCabPage.FuriganaTop" xml:space="preserve">
    <value>假名在上</value>
  </data>
  <data name="MeCabPage.FuriganaBottom" xml:space="preserve">
    <value>假名在下</value>
  </data>
  <data name="MeCabPage.TextVertical" xml:space="preserve">
    <value>文本竖排</value>
  </data>
  <data name="MeCabPage.FuriganaType" xml:space="preserve">
    <value>假名显示方式</value>
  </data>
  <data name="MeCabPage.Hiragana" xml:space="preserve">
    <value>平假名</value>
  </data>
  <data name="MeCabPage.Katakana" xml:space="preserve">
    <value>片假名</value>
  </data>
  <data name="MeCabPage.Romaji" xml:space="preserve">
    <value>罗马音</value>
  </data>
  <data name="GameView.SwitchFullScreen" xml:space="preserve">
    <value>全屏 (Alt + Enter)</value>
  </data>
  <data name="GameView.FocusTip" xml:space="preserve">
    <value>使EH交互窗口失去焦点
(如果你无法在全屏游戏时点击就请打开这个)</value>
  </data>
  <data name="GameView.ActionCenter" xml:space="preserve">
    <value>通知中心</value>
  </data>
  <data name="GameView.TaskView" xml:space="preserve">
    <value>任务视图</value>
  </data>
  <data name="GameView.ScreenShot" xml:space="preserve">
    <value>截图</value>
  </data>
  <data name="GameView.Preference" xml:space="preserve">
    <value>偏好设置</value>
  </data>
  <data name="SelectProcess.ProcessExit" xml:space="preserve">
    <value>进程消失了</value>
  </data>
  <data name="HookPage.SelectedTextInitTip" xml:space="preserve">
    <value>往下滑动以选择一个文本线程</value>
  </data>
  <data name="HookPage.Title" xml:space="preserve">
    <value>钩子设置</value>
  </data>
  <data name="About.Title" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="MeCabPage.FuriganaDefault" xml:space="preserve">
    <value>不显示假名</value>
  </data>
  <data name="GameView.SwitchWindow" xml:space="preserve">
    <value>窗口化 (Alt + Enter)</value>
  </data>
  <data name="GameView.FontDecreaseTip" xml:space="preserve">
    <value>减少字体大小</value>
  </data>
  <data name="GameView.FontIncreaseTip" xml:space="preserve">
    <value>增加字体大小</value>
  </data>
  <data name="GameView.PinnedTip" xml:space="preserve">
    <value>取消固定日文文本</value>
  </data>
  <data name="GameView.UnpinTip" xml:space="preserve">
    <value>固定日文文本</value>
  </data>
  <data name="GameView.VolumeDecreaseTip" xml:space="preserve">
    <value>减小系统音量</value>
  </data>
  <data name="GameView.VolumeIncreaseTip" xml:space="preserve">
    <value>增加系统音量</value>
  </data>
  <data name="GeneralPage.Brightness" xml:space="preserve">
    <value>亮度</value>
  </data>
  <data name="GeneralPage.BrightnessTip" xml:space="preserve">
    <value>将会通过修改修改伽马值来调整亮度（如不使用请勿修改，建议保持最大）</value>
  </data>
  <data name="GeneralPage.DeepL" xml:space="preserve">
    <value>DeepL 客户端插件</value>
  </data>
  <data name="GeneralPage.DeepLDownload" xml:space="preserve">
    <value>下载 DeepL</value>
  </data>
  <data name="GeneralPage.Msic" xml:space="preserve">
    <value>杂项</value>
  </data>
  <data name="HookPage.CodeInsertDialogTip" xml:space="preserve">
    <value>输入特殊码</value>
  </data>
  <data name="HookPage.CodeInsertLabel" xml:space="preserve">
    <value>特殊码</value>
  </data>
  <data name="HookPage.CodeSearchCancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="HookPage.CodeSearchNoResult" xml:space="preserve">
    <value>没有找到该游戏的特殊码</value>
  </data>
  <data name="HookPage.CodeSearchTip" xml:space="preserve">
    <value>在 Aniclan 上搜索特殊码</value>
  </data>
  <data name="HookPage.RegExpTag1" xml:space="preserve">
    <value>去除“『”或“「”之前的所有文本</value>
  </data>
  <data name="HookPage.RegExpTag2" xml:space="preserve">
    <value>去除“』”或“」”之后的所有文本</value>
  </data>
  <data name="HookPage.RegExpTag3" xml:space="preserve">
    <value>去除形如&lt;.*?&gt;的假名标签</value>
  </data>
  <data name="HookPage.RegExpTag4" xml:space="preserve">
    <value>去除换行符</value>
  </data>
  <data name="HookPage.RegExpTag5" xml:space="preserve">
    <value>去除任意Ascii字符</value>
  </data>
  <data name="HookPage.RegExpTip" xml:space="preserve">
    <value>选择一个正则表达式</value>
  </data>
  <data name="HookPage.TextThreadRefreshLabel" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="HookPage.TextThreadRefreshTip" xml:space="preserve">
    <value>清空所有文本线程</value>
  </data>
  <data name="MeCabPage.Dict" xml:space="preserve">
    <value>字典</value>
  </data>
  <data name="MeCabPage.TextFlyout" xml:space="preserve">
    <value>文本显示方式</value>
  </data>
  <data name="CardControl.CloseTip" xml:space="preserve">
    <value>关闭卡片</value>
  </data>
  <data name="CardControl.SelectTextTip" xml:space="preserve">
    <value>自由选择文本</value>
  </data>
  <data name="Textractor.AlreadyInject" xml:space="preserve">
    <value>Textractor: 已经注入</value>
  </data>
  <data name="Textractor.InvalidCode" xml:space="preserve">
    <value>Textractor: 无效特殊码</value>
  </data>
  <data name="Textractor.InvalidProcess" xml:space="preserve">
    <value>Textractor: 无效进程ID</value>
  </data>
  <data name="Textractor.Init" xml:space="preserve">
    <value>Textractor: 初始化完成</value>
  </data>
  <data name="Textractor.InjectFailed" xml:space="preserve">
    <value>Textractor: 无法注入</value>
  </data>
  <data name="Textractor.Clipboard" xml:space="preserve">
    <value>剪切板</value>
  </data>
  <data name="Common.OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="HookPage.RCodeLabel" xml:space="preserve">
    <value>阅读码</value>
  </data>
  <data name="HookPage.RCodeTip" xml:space="preserve">
    <value>搜索文本帮助插入阅读码</value>
  </data>
</root>