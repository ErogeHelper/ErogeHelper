<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SelectProcess.Tips" xml:space="preserve">
    <value>请使用EHInstaller.exe来安装我，安装后右键游戏程序选择Eroge Helper启动更方便哦~</value>
  </data>
  <data name="SelectProcess.InjectButton" xml:space="preserve">
    <value>注入</value>
  </data>
  <data name="SelectProcess.Lable" xml:space="preserve">
    <value>选择应用</value>
  </data>
  <data name="SelectProcess.Title" xml:space="preserve">
    <value>Eroge Helper - 选择进程注入</value>
  </data>
  <data name="MessageBox.TimeoutInfo" xml:space="preserve">
    <value>(超时)未找到游戏窗口</value>
  </data>
  <data name="About.Version" xml:space="preserve">
    <value>版本： </value>
  </data>
  <data name="About.AppName" xml:space="preserve">
    <value>Eroge Helper</value>
  </data>
  <data name="About.Contributors" xml:space="preserve">
    <value>贡献者</value>
  </data>
  <data name="About.Dependencies" xml:space="preserve">
    <value>依赖项</value>
  </data>
  <data name="About.FileABug" xml:space="preserve">
    <value>如果发现任何 bug，请在 Github 仓库中创建一个新 Issue。</value>
  </data>
  <data name="About.GitHub" xml:space="preserve">
    <value>Github 仓库</value>
  </data>
  <data name="About.OpenNewIssue" xml:space="preserve">
    <value>创建新 Issue</value>
  </data>
  <data name="ShellMenu.DirectStart" xml:space="preserve">
    <value>启动游戏</value>
  </data>
  <data name="ShellMenu.LEStart" xml:space="preserve">
    <value>使用 Locate Emulator 转区启动</value>
  </data>
  <data name="ShellMenu.Administrator" xml:space="preserve">
    <value>设置管理员身份运行</value>
  </data>
  <data name="Installer.Info" xml:space="preserve">
    <value>这会将Eroge Helper注册到所有exe程序的右键上下文菜单，若要移动或删除文件夹请先运行 Installer 注销掉EH。</value>
  </data>
  <data name="Installer.Register" xml:space="preserve">
    <value>注册</value>
  </data>
  <data name="Installer.Unload" xml:space="preserve">
    <value>卸载</value>
  </data>
  <data name="HookConfig.Title" xml:space="preserve">
    <value>Eroge Helper - 钩子设置</value>
  </data>
  <data name="HookPage.HookCode" xml:space="preserve">
    <value>特殊码</value>
  </data>
  <data name="HookPage.Insert" xml:space="preserve">
    <value>插入</value>
  </data>
  <data name="HookPage.SelectedText" xml:space="preserve">
    <value>选择的文本</value>
  </data>
  <data name="HookPage.Regexp" xml:space="preserve">
    <value>正则表达式</value>
  </data>
  <data name="HookPage.Text" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="HookPage.Console" xml:space="preserve">
    <value>控制台输出</value>
  </data>
  <data name="HookPage.SelectText" xml:space="preserve">
    <value>文本选择</value>
  </data>
  <data name="HookPage.Submit" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="GameView.MaxLenthTip" xml:space="preserve">
    <value>跳过过长文本</value>
  </data>
  <data name="GeneralPage.JapaneseText" xml:space="preserve">
    <value>显示日文文本</value>
  </data>
  <data name="GeneralPage.AppendText" xml:space="preserve">
    <value>显示其他文本</value>
  </data>
  <data name="GeneralPage.Title" xml:space="preserve">
    <value>常规</value>
  </data>
  <data name="MecabPage.Title" xml:space="preserve">
    <value>日文分词</value>
  </data>
  <data name="MecabPage.PositionFormat" xml:space="preserve">
    <value>文本显示布局</value>
  </data>
  <data name="MecabPage.FuriganaTop" xml:space="preserve">
    <value>假名在上</value>
  </data>
  <data name="MecabPage.FuriganaBottom" xml:space="preserve">
    <value>假名在下</value>
  </data>
  <data name="MecabPage.TextVertical" xml:space="preserve">
    <value>文本竖排</value>
  </data>
  <data name="MecabPage.FuriganaType" xml:space="preserve">
    <value>假名显示方式</value>
  </data>
  <data name="MecabPage.Hiragana" xml:space="preserve">
    <value>平假名</value>
  </data>
  <data name="MecabPage.Katakana" xml:space="preserve">
    <value>片假名</value>
  </data>
  <data name="MecabPage.Romaji" xml:space="preserve">
    <value>罗马音</value>
  </data>
  <data name="GameView.SwitchFullScreen" xml:space="preserve">
    <value>全屏切换 (Alt + Enter)</value>
  </data>
  <data name="GameView.FocusTip" xml:space="preserve">
    <value>使EH交互窗口失去焦点
(如果你无法在全屏游戏时点击就请打开这个)</value>
  </data>
  <data name="GameView.ActionCenter" xml:space="preserve">
    <value>通知中心</value>
  </data>
  <data name="GameView.TaskView" xml:space="preserve">
    <value>任务视图</value>
  </data>
  <data name="GameView.Screenshot" xml:space="preserve">
    <value>截图</value>
  </data>
  <data name="GameView.Preference" xml:space="preserve">
    <value>偏好设置</value>
  </data>
  <data name="SelectProcess.ProcessExit" xml:space="preserve">
    <value>进程消失了</value>
  </data>
</root>