<Window x:Class="ErogeHelper.View.GameView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:ErogeHelper.Model"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:control="clr-namespace:ErogeHelper.View.Control"
        xmlns:cm="http://caliburnmicro.com"
        xmlns:resx="clr-namespace:ErogeHelper.Language;assembly=ErogeHelper.Language"
        mc:Ignorable="d"
        Title="GameView" ShowInTaskbar="False"
        AllowsTransparency="True" WindowStyle="None" Topmost="True">
    
    <Window.Background>
        <SolidColorBrush />
    </Window.Background>
    <!-- Layout of the whole game window -->
    <Border>
        <!-- Client area -->
        <Border x:Name="ClientArea">
            <Grid>
                <DockPanel LastChildFill="False">
                    <!-- Main top activity area -->
                    <StackPanel DockPanel.Dock="Top">
                        <!-- Source Text -->
                        <Border 
                            Width="auto" Height="12" Visibility="{Binding TriggerBarVisibility}"
                            Background="Black" Opacity="0.002" cm:Message.Attach="[MouseEnter] = [TriggerBarEnter]"/>
                        <ContentControl 
                            x:Name="TextControl" Visibility="{Binding TextControlVisibility}" 
                            cm:Message.Attach="[MouseLeave] = [TextControlLeave]"/>
                        <!-- Extra Text-->
                        <ItemsControl x:Name="AppendTextList">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <control:OutlinedTextBlock 
                                            Margin="0 0 0 -5" Stroke="Black" Fill="white" ClipToBounds="False" 
                                            StrokePosition="Outside" StrokeThickness="1" TextWrapping="Wrap" 
                                            Text="{Binding}" FontSize="{Binding DataContext.FontSize,
                                                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </DockPanel>

                <!-- Interaction Button -->
                <control:AssistiveTouch 
                    Width="55" Height="55" DockPanel.Dock="Bottom"
                    Visibility="{Binding AssistiveTouchIsVisible, Converter={StaticResource VisibleConverter}}">
                    <ui:FlyoutService.Flyout>
                        <ui:CommandBarFlyout Placement="RightEdgeAlignedTop" ShowMode="Standard" >
                            <ui:AppBarButton 
                                Icon="FontDecrease" cm:Message.Attach="[Click] = [ZoomOut]" ToolTip="Decrease size"/>
                            <ui:AppBarButton 
                                Icon="FontIncrease" cm:Message.Attach="[Click] = [ZoomIn]" ToolTip="Increase size"/>
                            <ui:AppBarButton cm:Message.Attach="[Click] = [VolumeDown]" ToolTip="Volume down">
                                <ui:AppBarButton.Icon>
                                    <ui:FontIcon Glyph="{x:Static model:CommonGlyphs.Volume1}" />
                                </ui:AppBarButton.Icon>
                            </ui:AppBarButton>
                            <ui:AppBarButton 
                                Icon="Volume" cm:Message.Attach="[Click] = [VolumeUp]" ToolTip="Volume Up"/>
                            <ui:AppBarButton 
                                cm:Message.Attach="[Click] = [SwitchGameScreen]" Loaded="FullScreenButton_Loaded"
                                Icon="FullScreen" ToolTip="{x:Static resx:Strings.GameView_SwitchFullScreen}"/>
                            <ui:AppBarToggleButton 
                                IsChecked="{Binding IsSourceTextPined}" Width="40"
                                Visibility="{Binding PinSourceTextToggleVisubility}"
                                cm:Message.Attach="[Click] = [PinSourceTextToggle]" >
                                <ui:AppBarToggleButton.Resources>
                                    <Style TargetType="ui:AppBarToggleButton">
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Icon" Value="Pin"/>
                                                <Setter Property="ToolTip" Value="Unpin Japanese text" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter Property="Icon">
                                                    <Setter.Value>
                                                        <ui:FontIcon Glyph="{x:Static model:CommonGlyphs.Unpin}"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ToolTip" Value="Pin Japanese text" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:AppBarToggleButton.Resources>
                            </ui:AppBarToggleButton>
                            <ui:AppBarToggleButton 
                                Icon="Trim" IsChecked="{Binding IsLostFocus}" 
                                ToolTip="{x:Static resx:Strings.GameView_FocusTip}" 
                                cm:Message.Attach="[Click] = [FocusToggle]"/>

                            <ui:CommandBarFlyout.SecondaryCommands>
                                <ui:AppBarButton 
                                    Icon="DockRight" Label="{x:Static resx:Strings.GameView_ActionCenter}" 
                                    cm:Message.Attach="[Click] = [TaskbarNotifyArea]" InputGestureText="Win+A"/>
                                <ui:AppBarButton 
                                    Icon="DockLeft" Label="{x:Static resx:Strings.GameView_TaskView}" 
                                    cm:Message.Attach="[Click] = [TaskView]" InputGestureText="Win+Tab"/>
                                <ui:AppBarButton 
                                    Icon="Pictures" Label="{x:Static resx:Strings.GameView_Screenshot}" 
                                    cm:Message.Attach="[Click] = [ScreenShot]" InputGestureText="Win+Shift+S">
                                    <!--<ui:AppBarButton.Flyout>
                                                <ui:MenuFlyout Placement="RightEdgeAlignedTop">
                                                
                                                </ui:MenuFlyout>
                                            </ui:AppBarButton.Flyout>-->
                                </ui:AppBarButton>
                                <ui:AppBarSeparator/>
                                <ui:AppBarButton 
                                    Icon="Setting" Label="{x:Static resx:Strings.GameView_Preference}"
                                    cm:Message.Attach="[Click] = [OpenPreference]"/>
                                <ui:AppBarElementContainer>
                                    <Button
                                        Visibility="{Binding IsLostFocus, Converter={StaticResource VisibleConverter}}"
                                        Width="80" Height="40" Margin="10 5 0 5" Content="Skip" ToolTip="Ctrl"
                                        cm:Message.Attach="[PreviewMouseDown] = [PressSkip]; 
                                            [PreviewMouseUp] = [PressSkipRelease]"/>
                                </ui:AppBarElementContainer>
                            </ui:CommandBarFlyout.SecondaryCommands>
                        </ui:CommandBarFlyout>
                    </ui:FlyoutService.Flyout>
                </control:AssistiveTouch>
            </Grid>
        </Border>
    </Border>
</Window>
