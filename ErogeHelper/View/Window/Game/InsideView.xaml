<Window x:Class="ErogeHelper.View.Window.Game.InsideView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:cal="http://caliburnmicro.com"
        xmlns:resx="clr-namespace:ErogeHelper.Language;assembly=ErogeHelper.Language"
        xmlns:common="clr-namespace:ErogeHelper.Common"
        xmlns:control="clr-namespace:ErogeHelper.View.Control"
        xmlns:vm="clr-namespace:ErogeHelper.ViewModel.Window"
        xmlns:notifyItem="clr-namespace:ErogeHelper.ViewModel.Entity.NotifyItem"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:GameViewModel, IsDesignTimeCreatable=True}"
        cal:Bind.AtDesignTime="True"
        Title="InsideView" Top="-32000" Left="-32000" Topmost="True" ShowInTaskbar="False"
        AllowsTransparency="True" WindowStyle="None">

    <Window.Background>
        <SolidColorBrush />
    </Window.Background>
    <!-- Layout of the whole game window -->
    <Border>
        <!-- Client area -->
        <Border x:Name="ClientArea" BorderThickness="1" BorderBrush="Red">
            <Grid>
                <DockPanel LastChildFill="False">
                    <!-- Main top activity area -->
                    <StackPanel DockPanel.Dock="Top">
                        <!-- Source Text -->
                        <Border 
                            Width="auto" Height="12" Visibility="{Binding TriggerBarVisibility}"
                            Background="Black" Opacity="0.002" cal:Message.Attach="[MouseEnter] = [TriggerBarEnter]"/>
                        <StackPanel >
                            <ContentControl 
                                x:Name="TextControl" Visibility="{Binding TextControlVisibility}" 
                                cal:Message.Attach="[MouseLeave] = [TextControlLeave]"/>
                            <!-- Extra Text-->
                            <ItemsControl x:Name="AppendTextList">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type notifyItem:AppendTextItem}">
                                        <StackPanel Orientation="Vertical">
                                            <control:OutlinedTextBlock 
                                                Margin="0 0 0 -5" Stroke="Black" Fill="white" ClipToBounds="False" 
                                                StrokePosition="Outside" StrokeThickness="1" TextWrapping="Wrap" 
                                                Text="{Binding Message}" FontSize="{Binding DataContext.FontSize,
                                                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                ToolTip="{Binding ExtraInfo}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                    </StackPanel>
                </DockPanel>

                <!-- Interaction Button -->
                <control:AssistiveTouch 
                    Width="{StaticResource AssistiveTouchSize}" Height="{StaticResource AssistiveTouchSize}" 
                    Visibility="{Binding AssistiveTouchIsVisible, 
                        Converter={StaticResource TrueToVisibleConverter}}">
                    <ui:FlyoutService.Flyout>
                        <ui:CommandBarFlyout Placement="RightEdgeAlignedTop" ShowMode="Standard" >
                            <ui:AppBarButton 
                                Icon="FontDecrease" cal:Message.Attach="[Click] = [ZoomOut]" 
                                ToolTip="{x:Static resx:Strings.GameView_FontDecreaseTip}"/>
                            <ui:AppBarButton 
                                Icon="FontIncrease" cal:Message.Attach="[Click] = [ZoomIn]" 
                                ToolTip="{x:Static resx:Strings.GameView_FontIncreaseTip}"/>
                            <ui:AppBarButton 
                                cal:Message.Attach="[Click] = [VolumeDown]" 
                                ToolTip="{x:Static resx:Strings.GameView_VolumeDecreaseTip}">
                                <ui:AppBarButton.Icon>
                                    <ui:FontIcon Glyph="{x:Static common:CommonGlyphs.Volume1}" />
                                </ui:AppBarButton.Icon>
                            </ui:AppBarButton>
                            <ui:AppBarButton 
                                Icon="Volume" cal:Message.Attach="[Click] = [VolumeUp]" 
                                ToolTip="{x:Static resx:Strings.GameView_VolumeIncreaseTip}"/>
                            <ui:AppBarButton 
                                cal:Message.Attach="[Click] = [SwitchGameScreen]" Loaded="FullScreenButton_Loaded"
                                Icon="FullScreen" ToolTip="{x:Static resx:Strings.GameView_SwitchFullScreen}"/>
                            <ui:AppBarToggleButton 
                                IsChecked="{Binding IsSourceTextPined}" Width="40"
                                Visibility="{Binding PinSourceTextToggleVisibility}"
                                cal:Message.Attach="[Click] = [PinSourceTextToggle]" >
                                <ui:AppBarToggleButton.Resources>
                                    <Style TargetType="ui:AppBarToggleButton">
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Icon" Value="Pin"/>
                                                <Setter Property="ToolTip" Value="{x:Static resx:Strings.GameView_PinnedTip}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter Property="Icon">
                                                    <Setter.Value>
                                                        <ui:FontIcon Glyph="{x:Static common:CommonGlyphs.Unpin}"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ToolTip" Value="{x:Static resx:Strings.GameView_UnpinTip}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ui:AppBarToggleButton.Resources>
                            </ui:AppBarToggleButton>
                            <ui:AppBarToggleButton 
                                Icon="Trim" IsChecked="{Binding IsLoseFocus}" 
                                ToolTip="{x:Static resx:Strings.GameView_FocusTip}" 
                                cal:Message.Attach="[Click] = [FocusToggle]"/>
                            <ui:AppBarToggleButton 
                                Icon="TouchPointer" IsChecked="{Binding IsTouchToMouse}" 
                                ToolTip="Touch to mouse" 
                                cal:Message.Attach="[Click] = [TouchToMouseToggle]"/>

                            <ui:CommandBarFlyout.SecondaryCommands>
                                <ui:AppBarButton 
                                    Icon="DockRight" Label="{x:Static resx:Strings.GameView_ActionCenter}" 
                                    cal:Message.Attach="[Click] = [TaskbarNotifyArea]" InputGestureText="Win+A"/>
                                <ui:AppBarButton 
                                    Label="{x:Static resx:Strings.GameView_TaskView}" 
                                    cal:Message.Attach="[Click] = [TaskView]" InputGestureText="Win+Tab">
                                    <ui:AppBarButton.Icon>
                                        <ui:FontIcon Glyph="{x:Static common:CommonGlyphs.TaskView}" />
                                    </ui:AppBarButton.Icon>
                                </ui:AppBarButton>
                                <ui:AppBarButton 
                                    Icon="Pictures" Label="{x:Static resx:Strings.GameView_ScreenShot}" 
                                    cal:Message.Attach="[Click] = [ScreenShot]" InputGestureText="Win+Shift+S">
                                    <!-- UNDONE: Other ScreenShot-->
                                    <!--<ui:AppBarButton.Flyout>
                                        <ui:MenuFlyout Placement="RightEdgeAlignedTop">
                                            
                                        </ui:MenuFlyout>
                                    </ui:AppBarButton.Flyout>-->
                                </ui:AppBarButton>
                                <ui:AppBarSeparator/>

                                <ui:AppBarButton 
                                    Icon="BrowsePhotos" Label="Try reset EH position" cal:Message.Attach="[Click] = [ResetInsideView]"/>
                                
                                <ui:AppBarSeparator/>
                                <ui:AppBarButton 
                                    Icon="Setting" Label="{x:Static resx:Strings.GameView_Preference}"
                                    cal:Message.Attach="[Click] = [OpenPreference]"/>
                                <ui:AppBarElementContainer>
                                    <Button
                                        Visibility="{Binding IsLoseFocus, 
                                            Converter={StaticResource TrueToVisibleConverter}}"
                                        Width="80" Height="40" Margin="10 5 0 5" Content="Skip" ToolTip="Ctrl"
                                        cal:Message.Attach="[PreviewMouseDown] = [PressSkip]; 
                                            [PreviewMouseUp] = [PressSkipRelease]"/>
                                </ui:AppBarElementContainer>
                            </ui:CommandBarFlyout.SecondaryCommands>
                        </ui:CommandBarFlyout>
                    </ui:FlyoutService.Flyout>
                </control:AssistiveTouch>
            </Grid>
        </Border>
    </Border>
</Window>
